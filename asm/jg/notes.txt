Django
Documentação: https://docs.djangoproject.com/en/5.2/

É um framework de desenvolvimento web em Python com muitos recursos prontos para uso.

Serve como base para construir praticamente qualquer tipo de aplicação para a internet.

Origem: Foi criado inicialmente para atender a sites de notícias.

Filosofia "Baterias Inclusas": O Django é conhecido por vir com tudo o que é necessário para o desenvolvimento, como:

Django ORM: Componente que faz a ligação com o banco de dados.

Sistema de Templates: Permite criar a estrutura do HTML e conectar com os dados da aplicação.

Sistema de disparo de e-mail.

Design: Possui um design modular, com recursos que podem ser usados de forma independente.

Comunidade: A comunidade em torno do Django é muito ativa e colaborativa.

O que é um Framework?
É um "kit" de ferramentas para construir um sistema sem precisar começar do zero.

Framework Back-end: Focado na lógica do sistema e na comunicação com o banco de dados.

Exemplos: Django, Flask e FastAPI.

Framework Front-end: Focado na parte visual e na interatividade com o usuário.

Exemplos: React, Angular e Vue.js (muitos usam a linguagem TypeScript).

Arquitetura MVT (Model-View-Template)
Esta é a arquitetura de software utilizada pelo Django.

Model: Representa a estrutura dos dados e faz a conexão com o banco de dados.

View: É o "cérebro" de toda a operação. Contém a lógica de negócio, processa as requisições do usuário e interage com o Model para buscar dados.

Template: É a estrutura do HTML que será apresentada ao usuário, preenchida com os dados fornecidos pela View.

Comparação com a Arquitetura MVC
O padrão MVT do Django é muito parecido com o conhecido padrão MVC (Model-View-Controller). A principal diferença está nos nomes e nas responsabilidades:

O Controller do MVC é semelhante à View do Django (ambos cuidam da lógica).

A View do MVC é semelhante ao Template do Django (ambos cuidam da camada de exibição/apresentação).

-----------------------------------------------------------------------------------------------------------------------

Explicacoes gerais:
Estrtutura do projeto criado pelo django
manage.py : 
    inicializandoo projeto
    Gerencia o projeto

myproejct/pycache:
    cacheia pra melhorar a performance

myproejct/__init__:
    informa ao python que deve ser instalado

myproejct/settings.py:
    Lista os apps
    configuracao do banco
    configuracao de linguagem e horario
    O que um projeto x app ?
        Projeto django: 
            Projeto principal pra rodar a aplicacao
            Container para os apps
            configuracao gerais do projeto
        app:
            modulos independente do projeto que realizam algumas acoes/funcoes diferentes
            pode conter:
                views
                migrations
                Templates
                outros arquivos

myproejct/url.py:
    gerenciamento das rotas da aplicacao

myproejct/asgi e myproejct/wsgi:
    Sao arquivos de configuracao gerais do servidor
    Permite rodar em servidores


-----------------------------------------------------------------------------------------------------------------------
Comandos usados durante o curso:
    Criacao do ambiente virtual
    Em windows: \venv\Script\activate
    django-admin startproject myproject . (Start do rojeto)
    python manage.py runserver (inicializando o projeto)
    python manage.py startapp myapps (cria um exemplo de app, fica no root do projeto)